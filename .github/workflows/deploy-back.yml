name: Backend CI

on:
  push:
    paths:
      - 'terraform/modules/lambda/src/**'
  workflow_dispatch:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Run Lambda tests
        run: |
          cd terraform/modules/lambda/src/test
          python -m unittest discover .

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Zip Lambda function
        run: |
          cd terraform/modules/lambda/src/main
          if [ -f views_counter.zip ]; then
            echo "Removing existing zip..."
            rm views_counter.zip
          fi
          echo "Zipping Lambda function..."
          zip views_counter.zip views_counter.py

      - name: Terraform Plan
        if: ${{ success() }}
        working-directory: terraform
        env:
          TF_VAR_root_domain: ${{ secrets.ROOT_DOMAIN }}
          TF_VAR_hosted_zone_id: ${{ secrets.HOSTED_ZONE_ID }}
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }}
          TF_VAR_alert_email: ${{ secrets.ALERT_EMAIL }}
          TF_VAR_owner_name: ${{ secrets.OWNER_NAME }}
          TF_VAR_project_name: ${{ secrets.PROJECT_NAME }}
        run: |
          terraform init
          terraform plan -no-color
